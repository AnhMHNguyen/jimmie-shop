{"version":3,"sources":["components/form-input/form-input.styles.jsx","components/form-input/form-input.component.jsx","redux/order/order.selectors.js","components/user-orders-item/user-orders-item.styles.jsx","components/user-orders-item/user-orders-item.component.jsx","components/user-orders/user-orders.styles.jsx","components/user-orders/user-orders.component.jsx","components/update-account/update-account.styles.jsx","components/update-account/update-account.component.jsx","components/user-information/user-information.styles.jsx","components/user-information/user-information.component.jsx","pages/accountPage/accountPage.styles.jsx","pages/accountPage/accountPage.component.jsx"],"names":["subColor","shrinkLabelStyles","css","GroupContainer","styled","div","FormInputContainer","input","FormInputLabel","label","FormInput","handleChange","otherProps","onChange","className","value","length","selectOrder","state","order","selectOrderDetails","createSelector","selectOrderList","orderList","selectOrderMessage","message","selectOrderError","loading","error","UserOrdersItemContainer","OrderHeader","HeaderContainer","LinkContainer","Link","OrderDetails","RowContainer","InfoContainer","ItemInfo","ItemButton","Divider","hr","UserOrdersItem","index","orderItems","shippingAddress","to","_id","totalPrice","style","marginBottom","fName","lName","phoneNumber","address2","address1","city","province","country","postalCode","shippingPrice","map","item","name","UserOrderContainer","TitleContainer","EmptyContainer","UserOrders","dispatch","useDispatch","currentUser","useSelector","selectCurrentUser","useEffect","myOrdersStart","UpdateAccountContainer","UpdateAccount","close","useState","email","password","confirmPassword","userCredentials","setCredentials","handleSubmit","event","a","preventDefault","alert","updateUserStart","target","onSubmit","type","required","width","UserInformationContainer","InfoItemContainer","EditButton","FiEdit","UserInformation","infoEdit","setInfoEdit","closeHandler","onClick","show","click","ProfilePageContainer","ContentContainer","AccountPage"],"mappings":"iKAEMA,EAAW,OAGXC,EAAoBC,YAAH,6EAFL,SAQLC,EAAiBC,IAAOC,IAAV,mIAQdC,EAAqBF,IAAOG,MAAV,qVAGpBP,EAOkBA,EAMvBC,GAIOO,EAAiBJ,IAAOK,MAAV,6NAChBT,EASLC,G,kCC7BSS,IAbG,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAcF,EAAjB,EAAiBA,MAAUG,EAA3B,wBAChB,eAACT,EAAD,WACE,cAACG,EAAD,aAAoBO,SAAUF,GAAkBC,IAC9CH,EACC,cAACD,EAAD,CAAgBM,UAAWF,EAAWG,MAAMC,OAAS,SAAW,GAAhE,SACEP,IAED,U,iCCdR,oJAEMQ,EAAc,SAAAC,GAAK,OAAIA,EAAMC,OAEtBC,EAAqBC,YAChC,CAACJ,IACD,SAAAE,GAAK,OAAIA,EAAMA,SAGJG,EAAkBD,YAC7B,CAACJ,IACD,SAAAE,GAAK,OAAIA,EAAMI,aAGJC,EAAqBH,YAChC,CAACJ,IACD,SAAAE,GAAK,OAAIA,EAAMM,WAOJC,GAJuBL,YAClC,CAACJ,IACD,SAAAE,GAAK,OAAIA,EAAMQ,WAEeN,YAC9B,CAACJ,IACD,SAAAE,GAAK,OAAIA,EAAMS,W,0JCpBJC,EAA0BzB,IAAOC,IAAV,4GAOvByB,EAAc1B,IAAOC,IAAV,6KASX0B,EAAkB3B,IAAOC,IAAV,wEAKf2B,EAAgB5B,YAAO6B,IAAP7B,CAAH,2EAMb8B,EAAe9B,IAAOC,IAAV,oIAQZ8B,EAAe/B,IAAOC,IAAV,oGAMZ+B,EAAgBhC,IAAOC,IAAV,yEAKbgC,EAAWjC,IAAOC,IAAV,0GAMRiC,EAAalC,YAAO6B,IAAP7B,CAAH,8WAkBVmC,EAAUnC,IAAOoC,GAAV,wF,OChCLC,EAxCQ,SAAC,GAAsB,IAApBtB,EAAmB,EAAnBA,MAAOuB,EAAY,EAAZA,MACxBC,EAA+BxB,EAA/BwB,WAAYC,EAAmBzB,EAAnByB,gBACnB,OACE,eAACf,EAAD,WACE,eAACC,EAAD,WACE,eAACC,EAAD,qBAAyBW,KACzB,cAACV,EAAD,CAAea,GAAE,iBAAY1B,EAAM2B,KAAnC,8BAEF,eAACZ,EAAD,WACE,iDACA,iDACA,kDAAqBf,EAAM2B,OAC3B,qDAAwB3B,EAAM4B,WAA9B,OACA,eAACZ,EAAD,WACA,eAACC,EAAD,WACE,sBAAMY,MAAO,CAAEC,aAAc,OAA7B,yBACA,iCAAOL,EAAgBM,MAAvB,IAA+BN,EAAgBO,SAC/C,+BAAOP,EAAgBQ,cACtBR,EAAgBS,UAAY,+BAAOT,EAAgBS,WACpD,+BAAOT,EAAgBU,WACvB,iCAAOV,EAAgBW,KAAvB,KAA+BX,EAAgBY,YAC/C,iCAAOZ,EAAgBa,QAAvB,IAAiCb,EAAgBc,cACjD,mDAAsBvC,EAAMwC,oBAE9B,eAACvB,EAAD,WACE,sBAAMY,MAAO,CAAEC,aAAc,OAA7B,qBACEN,EAAWiB,KAAK,SAAAC,GAAI,OACpB,eAACxB,EAAD,WACE,+BAAOwB,EAAKC,OACZ,cAACxB,EAAD,CAAYO,GAAE,mBAAcgB,EAAKf,KAAjC,4BAFae,EAAKf,iBAQ1B,cAACP,EAAD,Q,QCnCOwB,EAAqB3D,IAAOC,IAAV,wJASlB2D,EAAiB5D,IAAOC,IAAV,wKAQd4D,EAAiB7D,IAAOC,IAAV,4FAKd2B,EAAgB5B,YAAO6B,IAAP7B,CAAH,yDCUX8D,EA1BI,WACjB,IAAMC,EAAWC,cACXC,EAAcC,YAAYC,KAC1BhD,EAAY+C,YAAYhD,KAM9B,OAJAkD,qBAAU,WACTL,EAASM,iBACP,CAACN,IAEI5C,EACN,eAACwC,EAAD,WACE,cAACC,EAAD,yBACA,iDAAoBK,EAAYP,KAAhC,kFACEvC,EAAUP,OAAS,EAClBO,EAAUqC,KAAK,SAACzC,EAAOuB,GAAR,OACd,cAAC,EAAD,CAAgCvB,MAAOA,EAAOuB,MAAOA,EAAM,GAAtCvB,EAAM2B,QAE3B,eAACmB,EAAD,WACE,+BAAM,wEACN,+BAAM,mCAAQ,cAAC,EAAD,CAAepB,GAAG,QAAlB,wBAAR,iCAVK,cAAC,IAAD,K,oGChBV6B,GAAyBtE,IAAOC,IAAV,2EAMtB2D,GAAiB5D,IAAOC,IAAV,+GCkEZsE,GAhEO,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACjBT,EAAWC,cACXC,EAAcC,YAAYC,KAChC,EAA0CM,mBAAU,CAClDf,KAAMO,EAAYP,KAClBgB,MAAOT,EAAYS,MACnBC,SAAU,GACVC,gBAAiB,KAJnB,mBAAOC,EAAP,KAAwBC,EAAxB,KAMQpB,EAA2CmB,EAA3CnB,KAAMgB,EAAqCG,EAArCH,MAAOC,EAA8BE,EAA9BF,SAAUC,EAAoBC,EAApBD,gBAEzBG,EAAY,yCAAG,WAAMC,GAAN,UAAAC,EAAA,yDACnBD,EAAME,iBACFP,IAAaC,EAFE,uBAGjBO,MAAM,sBAHW,0BAMnBX,IACAT,EAASqB,aAAgB,CAACV,QAAOC,WAAUjB,UAPxB,2CAAH,sDAUZnD,EAAe,SAAAyE,GACnB,MAAsBA,EAAMK,OAArB3B,EAAP,EAAOA,KAAM/C,EAAb,EAAaA,MACbmE,EAAe,6BAAID,GAAL,mBAAuBnB,EAAO/C,MAG9C,OACE,eAAC2D,GAAD,WACE,cAAC,GAAD,2BACA,uBAAMgB,SAAUP,EAAhB,UACA,cAAC,KAAD,CACMQ,KAAK,OACL7B,KAAK,OACL/C,MAAO+C,EACPjD,SAAUF,EACVF,MAAM,eACNmF,UAAQ,IACV,cAAC,KAAD,CACED,KAAK,QACL7B,KAAK,QACL/C,MAAO+D,EACPjE,SAAUF,EACVF,MAAM,QACNmF,UAAQ,IACV,cAAC,KAAD,CACED,KAAK,WACL7B,KAAK,WACL/C,MAAOgE,EACPlE,SAAUF,EACVF,MAAM,aAER,cAAC,KAAD,CACEkF,KAAK,WACL7B,KAAK,kBACL/C,MAAOiE,EACPnE,SAAUF,EACVF,MAAM,qBAER,cAAC,KAAD,CAAcuC,MAAO,CAAC6C,MAAM,QAASF,KAAK,SAA1C,mC,UCjEGG,GAA2B1F,IAAOC,IAAV,gOAaxB2D,GAAiB5D,IAAOC,IAAV,oLASdkC,GAAUnC,IAAOoC,GAAV,wFAKPJ,GAAgBhC,IAAOC,IAAV,iJAQb0F,GAAoB3F,IAAOC,IAAV,yEAKjB2F,GAAa5F,YAAO6F,KAAP7F,CAAH,uICDR8F,GAlCS,WACtB,IAAM7B,EAAcC,YAAYC,KAChC,EAAkCM,oBAAS,GAA3C,mBAAQsB,EAAR,KAAkBC,EAAlB,KAEMC,EAAe,WACnBD,GAAY,IAGd,OACE,qCACE,eAACN,GAAD,WACE,cAAC,GAAD,yBACA,eAAC,GAAD,WACE,eAACC,GAAD,WACE,yCACA,6CAGF,eAACA,GAAD,WACE,+BAAO1B,EAAYP,OACnB,+BAAOO,EAAYS,WAErB,cAACkB,GAAD,CAAYM,QAAS,kBAAMF,GAAY,SAEzC,cAAC,GAAD,OAEF,cAAC,KAAD,CAAYG,KAAMJ,EAAlB,SACE,cAAC,GAAD,CAAevB,MAAOyB,MAEtBF,GAAY,cAAC,KAAD,CAAUK,MAAOH,QCnCxBI,GAAuBrG,IAAOC,IAAV,wEAKpBqG,GAAmBtG,IAAOC,IAAV,2OCUdsG,UAZK,WAElB,OACE,cAACF,GAAD,UACE,eAACC,GAAD,WACE,cAAC,EAAD,IACA,cAAC,GAAD","file":"static/js/11.22adf6aa.chunk.js","sourcesContent":["import styled, { css } from 'styled-components';\r\n\r\nconst subColor = 'grey';\r\nconst mainColor = 'black';\r\n\r\nconst shrinkLabelStyles = css`\r\n  top: -14px;\r\n  font-size: 12px;\r\n  color: ${mainColor};\r\n`;\r\n\r\nexport const GroupContainer = styled.div`\r\n  position: relative;\r\n  margin: 20px 0;\r\n  input[type='password'] {\r\n    letter-spacing: 0.3em;\r\n  }\r\n`;\r\n\r\nexport const FormInputContainer = styled.input`\r\n  background: none;\r\n  background-color: white;\r\n  color: ${subColor};\r\n  font-size: 15px;\r\n  padding: 10px 10px 10px 5px;\r\n  display: block;\r\n  width: 100%;\r\n  border: none;\r\n  border-radius: 0;\r\n  border-bottom: 1px solid ${subColor};\r\n  margin: 25px 0;\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  &:focus ~ label {\r\n    ${shrinkLabelStyles}\r\n  }\r\n`;\r\n\r\nexport const FormInputLabel = styled.label`\r\n  color: ${subColor};\r\n  font-size: 16px;\r\n  font-weight: normal;\r\n  position: absolute;\r\n  pointer-events: none;\r\n  left: 5px;\r\n  top: 10px;\r\n  transition: 300ms ease all;\r\n  &.shrink {\r\n    ${shrinkLabelStyles}\r\n  }\r\n`;","import React from 'react';\r\nimport {\r\n  GroupContainer,\r\n  FormInputContainer,\r\n  FormInputLabel\r\n} from './form-input.styles';\r\n\r\nconst FormInput = ({ handleChange, label, ...otherProps }) => (\r\n  <GroupContainer>\r\n    <FormInputContainer onChange={handleChange} {...otherProps}/>\r\n    { label ? \r\n      (<FormInputLabel className={otherProps.value.length ? 'shrink' : ''}>\r\n        {label}\r\n      </FormInputLabel>)\r\n      : null}\r\n  </GroupContainer>\r\n\r\n\r\n);\r\n\r\nexport default FormInput;","import { createSelector } from \"reselect\";\r\n\r\nconst selectOrder = state => state.order;\r\n\r\nexport const selectOrderDetails = createSelector(\r\n  [selectOrder],\r\n  order => order.order\r\n);\r\n\r\nexport const selectOrderList = createSelector(\r\n  [selectOrder],\r\n  order => order.orderList\r\n);\r\n\r\nexport const selectOrderMessage = createSelector(\r\n  [selectOrder],\r\n  order => order.message\r\n);\r\n\r\nexport const selectIsOrderLoading = createSelector(\r\n  [selectOrder],\r\n  order => order.loading\r\n); \r\nexport const selectOrderError = createSelector(\r\n  [selectOrder],\r\n  order => order.error\r\n); ","import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n// import CustomButton from \"../custom-button/custom-button.component\";\r\n\r\n\r\nexport const UserOrdersItemContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  margin: 30px 0;\r\n`;\r\n\r\nexport const OrderHeader = styled.div`\r\n  background-color: #f6f4f1;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 5px 15px;\r\n`;\r\n\r\nexport const HeaderContainer = styled.div`\r\n  font-size: x-large;\r\n  font-weight: 600;\r\n`;\r\n\r\nexport const LinkContainer = styled(Link)`\r\n  &:hover{\r\n    color: rgb(192, 67, 43);\r\n  }\r\n`;\r\n\r\nexport const OrderDetails = styled.div`\r\n  padding: 10px 15px;\r\n  color: grey;\r\n  font-size: 15px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const RowContainer = styled.div`\r\n  display: flex;\r\n  margin: 15px 0;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const InfoContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const ItemInfo = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding-bottom: 10px;\r\n`;\r\n\r\nexport const ItemButton = styled(Link)`\r\n  width: fit-content;\r\n  padding: 0 10px;\r\n  border: 1px solid lightgray;\r\n  background-color: #f6f4f1;\r\n  margin-left: 15px;\r\n  font-size: 12px;\r\n  letter-spacing: .1rem;\r\n  &:hover{\r\n    color: white;\r\n    background-color: rgb(192, 67, 43);\r\n  }\r\n  @media screen and (max-width: 800px) {\r\n    font-size: 10px;\r\n    padding: 5px;\r\n  }\r\n`;\r\n\r\nexport const Divider = styled.hr`\r\n  border-top: 2px solid lightgray;\r\n  margin: 20px 0 10px;\r\n`;","import React from 'react'\r\nimport { UserOrdersItemContainer, OrderHeader, HeaderContainer, LinkContainer, OrderDetails, RowContainer, InfoContainer, ItemInfo, ItemButton, Divider } from './user-orders-item.styles'\r\n\r\nconst UserOrdersItem = ({ order, index }) => {\r\n  const {orderItems, shippingAddress} = order\r\n  return (\r\n    <UserOrdersItemContainer>\r\n      <OrderHeader>\r\n        <HeaderContainer>Order #{index}</HeaderContainer>\r\n        <LinkContainer to={`/order/${order._id}`}>Order Details</LinkContainer>\r\n      </OrderHeader>\r\n      <OrderDetails>\r\n        <span>Date Ordered:</span>\r\n        <span>Order Status:</span>\r\n        <span>Order Number: {order._id}</span>\r\n        <span>Order Total: CAD${order.totalPrice} </span>\r\n        <RowContainer>\r\n        <InfoContainer>\r\n          <span style={{ marginBottom: '5px'}}>Shipped to:</span>\r\n          <span>{shippingAddress.fName} {shippingAddress.lName}</span>\r\n          <span>{shippingAddress.phoneNumber}</span>\r\n          {shippingAddress.address2 && <span>{shippingAddress.address2}</span>}\r\n          <span>{shippingAddress.address1}</span>\r\n          <span>{shippingAddress.city}, {shippingAddress.province}</span>\r\n          <span>{shippingAddress.country} {shippingAddress.postalCode}</span>\r\n          <span>Shipping fee: ${order.shippingPrice}</span>\r\n        </InfoContainer>\r\n        <InfoContainer>\r\n          <span style={{ marginBottom: '5px'}}>Items: </span>\r\n          { orderItems.map( item => \r\n            <ItemInfo key={item._id}>\r\n              <span>{item.name}</span>\r\n              <ItemButton to={`/product/${item._id}`}>Item Details</ItemButton>\r\n            </ItemInfo>)}\r\n        </InfoContainer>\r\n\r\n      </RowContainer>\r\n      </OrderDetails>\r\n      <Divider />\r\n    </UserOrdersItemContainer>\r\n  )\r\n}\r\n\r\nexport default UserOrdersItem\r\n","import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const UserOrderContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 50%;\r\n  @media screen and (max-width: 800px) {\r\n    width: 95%;\r\n  }\r\n`;\r\n\r\nexport const TitleContainer = styled.div`\r\n  font-weight: 300;\r\n  font-size: 35px;\r\n  /* padding-bottom: 30px; */\r\n  letter-spacing: .1rem;\r\n  font-family: 'Arima Madurai', cursive;\r\n`;\r\n\r\nexport const EmptyContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 50px 0;\r\n`;\r\nexport const LinkContainer = styled(Link)`\r\n  color:  rgb(192, 67, 43);\r\n`;","import React, {useEffect} from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { selectCurrentUser } from '../../redux/user/user.selectors'\r\nimport { selectOrderList } from '../../redux/order/order.selectors'\r\nimport { myOrdersStart } from '../../redux/order/order.actions'\r\nimport UserOrdersItem from '../user-orders-item/user-orders-item.component'\r\nimport Spinner from '../spinner/spinner.component'\r\nimport { UserOrderContainer, TitleContainer, EmptyContainer, LinkContainer } from './user-orders.styles'\r\n\r\nconst UserOrders = () => {\r\n  const dispatch = useDispatch()\r\n  const currentUser = useSelector(selectCurrentUser)\r\n  const orderList = useSelector(selectOrderList)\r\n\r\n  useEffect(() => {\r\n   dispatch(myOrdersStart())\r\n  }, [dispatch])\r\n\r\n  return !orderList  ? <Spinner /> : (\r\n    <UserOrderContainer>\r\n      <TitleContainer>My Account</TitleContainer>\r\n      <span>Welcome back {currentUser.name}! You'll be able to track your orders and manage your personal details here.</span>\r\n      { orderList.length > 0 ? \r\n         orderList.map( (order, index) => \r\n          <UserOrdersItem key={order._id} order={order} index={index+1} />)\r\n        : \r\n          <EmptyContainer>\r\n            <span><strong>You haven't made any orders yet!</strong></span>\r\n            <span><strong><LinkContainer to='/shop'>Click here</LinkContainer> to start shopping.</strong></span>\r\n          </EmptyContainer>\r\n      }\r\n    </UserOrderContainer>\r\n  )\r\n}\r\n\r\nexport default UserOrders\r\n","import styled from \"styled-components\";\r\n\r\nexport const UpdateAccountContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n`;\r\n\r\nexport const TitleContainer = styled.div`\r\n  font-weight: 300;\r\n  font-size: 28px;\r\n  font-family: 'Arima Madurai', cursive;\r\n`;\r\n","import React, {useState} from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { selectCurrentUser } from '../../redux/user/user.selectors'\r\nimport { updateUserStart } from '../../redux/user/user.actions'\r\nimport FormInput from '../form-input/form-input.component'\r\nimport CustomButton from '../custom-button/custom-button.component'\r\nimport { UpdateAccountContainer, TitleContainer } from './update-account.styles'\r\n\r\n\r\n\r\nconst UpdateAccount = ({ close }) => {\r\n  const dispatch = useDispatch()\r\n  const currentUser = useSelector(selectCurrentUser)\r\n  const [userCredentials, setCredentials] = useState ({\r\n    name: currentUser.name,\r\n    email: currentUser.email,\r\n    password: '',\r\n    confirmPassword: ''\r\n  });\r\n  const { name, email, password, confirmPassword } = userCredentials;\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      alert('password not match');\r\n      return;\r\n    }\r\n    close()\r\n    dispatch(updateUserStart({email, password, name}));\r\n  };\r\n\r\n  const handleChange = event => {\r\n    const {name, value} = event.target;\r\n    setCredentials({...userCredentials, [name]: value});\r\n  };\r\n\r\n  return (\r\n    <UpdateAccountContainer>\r\n      <TitleContainer>Edit Details</TitleContainer>\r\n      <form onSubmit={handleSubmit}>\r\n      <FormInput \r\n            type='text'\r\n            name='name'\r\n            value={name}\r\n            onChange={handleChange}\r\n            label='Display Name'\r\n            required />\r\n          <FormInput \r\n            type='email'\r\n            name='email'\r\n            value={email}\r\n            onChange={handleChange}\r\n            label='Email'\r\n            required/>\r\n          <FormInput \r\n            type='password'\r\n            name='password'\r\n            value={password}\r\n            onChange={handleChange}\r\n            label='Password'\r\n            />\r\n          <FormInput \r\n            type='password'\r\n            name='confirmPassword'\r\n            value={confirmPassword}\r\n            onChange={handleChange}\r\n            label='Confirm Password'\r\n            />\r\n          <CustomButton style={{width:'100%'}} type='submit'>UPDATE DETAILS</CustomButton>\r\n      </form>\r\n    </UpdateAccountContainer>\r\n  )\r\n}\r\n\r\nexport default UpdateAccount\r\n","import styled from \"styled-components\";\r\nimport { FiEdit } from 'react-icons/fi'\r\n\r\nexport const UserInformationContainer = styled.div`\r\n  width: 20%;\r\n  background-color: #f6f4f1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 20px;\r\n  height: fit-content;\r\n  @media screen and (max-width: 800px) {\r\n    width: 90%;\r\n  }\r\n`;\r\n\r\n\r\nexport const TitleContainer = styled.div`\r\n  font-weight: 300;\r\n  font-size: 28px;\r\n  font-family: 'Arima Madurai', cursive;\r\n  @media screen and (max-width: 800px) {\r\n    font-size: 20px;\r\n  }\r\n`;\r\n\r\nexport const Divider = styled.hr`\r\n  border-top: 2px solid lightgray;\r\n  margin: 20px 0 10px;\r\n`;\r\n\r\nexport const InfoContainer = styled.div`\r\n  display: flex;\r\n  padding: 20px 0;\r\n  font-size: 15px;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nexport const InfoItemContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const EditButton = styled(FiEdit)`\r\n  color: rgb(192, 67, 43);\r\n  margin: 0 15px;\r\n  cursor: pointer;\r\n  \r\n  &:hover {\r\n    color: gray;\r\n  }\r\n`;","import React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectCurrentUser } from '../../redux/user/user.selectors'\r\nimport SideDrawer from '../side-drawer/side-drawer.component'\r\nimport Backdrop from '../backdrop/backdrop.component'\r\nimport UpdateAccount from '../update-account/update-account.component'\r\nimport { UserInformationContainer, Divider, TitleContainer, InfoContainer, InfoItemContainer, EditButton } from './user-information.styles'\r\n\r\nconst UserInformation = () => {\r\n  const currentUser = useSelector(selectCurrentUser)\r\n  const [ infoEdit, setInfoEdit ] = useState(false)\r\n\r\n  const closeHandler = () => {\r\n    setInfoEdit(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <UserInformationContainer>\r\n        <TitleContainer>My Details</TitleContainer>\r\n        <InfoContainer>\r\n          <InfoItemContainer>\r\n            <span>Name:</span>\r\n            <span>Email:</span>\r\n            \r\n          </InfoItemContainer>\r\n          <InfoItemContainer>\r\n            <span>{currentUser.name}</span>\r\n            <span>{currentUser.email}</span>\r\n          </InfoItemContainer>\r\n          <EditButton onClick={() => setInfoEdit(true)}/>\r\n        </InfoContainer>\r\n        <Divider />\r\n      </UserInformationContainer>\r\n      <SideDrawer show={infoEdit}>\r\n        <UpdateAccount close={closeHandler}/>\r\n      </SideDrawer>\r\n      { infoEdit && <Backdrop click={closeHandler} />}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserInformation\r\n","import styled from \"styled-components\";\r\n\r\nexport const ProfilePageContainer = styled.div`\r\n  padding: 120px 0 50px 0;\r\n  width: 100%;\r\n`;\r\n\r\nexport const ContentContainer = styled.div`\r\n  width: 100%;\r\n  min-height: 90vh;\r\n  display: flex;\r\n  gap: 70px;\r\n  justify-content: center;\r\n  @media screen and (max-width: 800px) {\r\n    flex-direction: column-reverse;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\n","import React from 'react'\r\nimport UserOrders from '../../components/user-orders/user-orders.component'\r\nimport UserInformation from '../../components/user-information/user-information.component'\r\nimport { ProfilePageContainer, ContentContainer } from './accountPage.styles'\r\n\r\nconst AccountPage = () => {\r\n\r\n  return (\r\n    <ProfilePageContainer>\r\n      <ContentContainer>\r\n        <UserOrders />\r\n        <UserInformation />\r\n      </ContentContainer>\r\n    </ProfilePageContainer>\r\n  )\r\n}\r\n\r\nexport default AccountPage\r\n"],"sourceRoot":""}