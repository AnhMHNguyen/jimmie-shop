{"version":3,"sources":["redux/order/order.selectors.js","pages/orderPage/orderPage.styles.jsx","pages/orderPage/orderPage.component.jsx"],"names":["selectOrder","state","order","selectOrderDetails","createSelector","selectOrderList","orderList","selectOrderMessage","message","selectOrderError","loading","error","OrderPageContainer","styled","div","ContentContainer","OrderDetailsContainer","TitleContainer","OrderHeader","HeaderBlockContainer","DetailsContainer","DetailsBlockContainer","Divider","hr","ItemContainer","ImageContainer","ItemTitle","ItemQty","ItemPrice","ItemDetails","Link","PriceDetailsContainer","SubTitleContainer","PriceContainer","TotalPrice","span","OrderPage","orderId","match","params","id","dispatch","useDispatch","useSelector","useEffect","orderDetailsStart","createdAt","split","isDelivered","deliveredAt","_id","shippingAddress","fName","lName","phoneNumber","address2","address1","city","province","country","postalCode","paymentMethod","isPaid","paidAt","totalPrice","orderItems","map","item","src","image","alt","name","qty","price","to","itemsPrice","taxPrice","shippingPrice"],"mappings":"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","file":"static/js/15.25a8b179.chunk.js","sourcesContent":["import { createSelector } from \"reselect\";\r\n\r\nconst selectOrder = state => state.order;\r\n\r\nexport const selectOrderDetails = createSelector(\r\n  [selectOrder],\r\n  order => order.order\r\n);\r\n\r\nexport const selectOrderList = createSelector(\r\n  [selectOrder],\r\n  order => order.orderList\r\n);\r\n\r\nexport const selectOrderMessage = createSelector(\r\n  [selectOrder],\r\n  order => order.message\r\n);\r\n\r\nexport const selectIsOrderLoading = createSelector(\r\n  [selectOrder],\r\n  order => order.loading\r\n); \r\nexport const selectOrderError = createSelector(\r\n  [selectOrder],\r\n  order => order.error\r\n); ","import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const OrderPageContainer = styled.div`\r\n  padding: 120px 0 50px 0;\r\n  width: 100%;\r\n`;\r\n\r\nexport const ContentContainer = styled.div`\r\n  width: 100%;\r\n  min-height: 90vh;\r\n  display: flex;\r\n  gap: 70px;\r\n  justify-content: center;\r\n\r\n  @media screen and (max-width: 800px) {\r\n    flex-direction: column-reverse;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nexport const OrderDetailsContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 50%;\r\n  @media screen and (max-width: 1024px) {\r\n    width: 60%;\r\n  }\r\n  @media screen and (max-width: 800px) {\r\n    width: 90%;\r\n  }\r\n`;\r\n\r\nexport const TitleContainer = styled.div`\r\n  font-weight: 300;\r\n  font-size: 35px;\r\n  letter-spacing: .1rem;\r\n  font-family: 'Arima Madurai', cursive;\r\n`;\r\n\r\nexport const OrderHeader = styled.div`\r\n  background-color: #f6f4f1;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-top: 20px;\r\n  padding: 5px 15px;\r\n`;\r\n\r\nexport const HeaderBlockContainer = styled.div`\r\n  width: 40%;\r\n  &:last-child {\r\n    width: 20%;\r\n  }\r\n`;\r\n\r\nexport const DetailsContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  /* align-items: center; */\r\n  padding: 20px 15px;\r\n  font-size: 15px;\r\n  color: grey;\r\n`;\r\n\r\nexport const DetailsBlockContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 40%;\r\n  &:last-child {\r\n    width: 20%;\r\n    text-transform: capitalize;\r\n  }\r\n`;\r\n// export const SubTitleContainer = styled.div`\r\n//   font-weight: medium;\r\n//   font-size: x-large;\r\n  \r\n// `;\r\n\r\nexport const Divider = styled.hr`\r\n  border-top: 2px solid lightgray;\r\n  margin: 20px 0;\r\n`;\r\n\r\nexport const ItemContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  align-items: center;\r\n  gap: 20px;\r\n  margin-bottom: 20px;\r\n  color: grey;\r\n`;\r\n\r\nexport const ImageContainer = styled.div`\r\n  width: 15%;\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nexport const ItemTitle = styled.div`\r\n  width: 40%;\r\n`;\r\n\r\nexport const ItemQty = styled.div`\r\n  width: 20%;\r\n`;\r\nexport const ItemPrice = styled.div`\r\n  width: 20%;\r\n  font-size: 15px;\r\n`;\r\n\r\nexport const ItemDetails = styled(Link)`\r\n  width: 5%;\r\n  color: grey;\r\n  &:hover{\r\n    color: rgb(192, 67, 43);\r\n  }\r\n`;\r\n\r\nexport const PriceDetailsContainer = styled.div`\r\n  width: 20%;\r\n  background-color: #f6f4f1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 20px;\r\n  height: fit-content;\r\n  @media screen and (max-width: 1024px) {\r\n    width: 30%;\r\n  }\r\n  @media screen and (max-width: 800px) {\r\n    width: 80%;\r\n  }\r\n`;\r\n\r\n\r\nexport const SubTitleContainer = styled.div`\r\n  font-weight: 300;\r\n  font-size: 28px;\r\n  font-family: 'Arima Madurai', cursive;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport const PriceContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 15px 0;\r\n`;\r\n\r\nexport const TotalPrice = styled.span`\r\n  font-size: large;\r\n`;\r\n\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { selectOrderDetails, selectOrderError } from '../../redux/order/order.selectors'\r\nimport Spinner from '../../components/spinner/spinner.component'\r\nimport ErrorFallBack from '../../components/error-boundary/error-boundary.component'\r\nimport { orderDetailsStart } from '../../redux/order/order.actions'\r\nimport {CgMoreVertical} from 'react-icons/cg'\r\nimport { OrderPageContainer, ContentContainer, TitleContainer, PriceDetailsContainer, OrderDetailsContainer, OrderHeader, Divider, HeaderBlockContainer, DetailsContainer, DetailsBlockContainer, ItemContainer,ImageContainer, ItemTitle, ItemQty, ItemPrice, ItemDetails, SubTitleContainer, PriceContainer, TotalPrice } from './orderPage.styles'\r\n\r\nconst OrderPage = ({ match }) => {\r\n  const orderId = match.params.id\r\n  const dispatch = useDispatch()\r\n  const error = useSelector(selectOrderError)\r\n  const order = useSelector(selectOrderDetails)\r\n\r\n  useEffect(() => {\r\n    dispatch(orderDetailsStart(orderId))\r\n  }, [dispatch, orderId])\r\n\r\n  return error ? <ErrorFallBack error={error} /> : \r\n  (error === null && order === null ) ? <Spinner /> : (\r\n    <OrderPageContainer>\r\n      <ContentContainer>\r\n        <OrderDetailsContainer>\r\n          <TitleContainer>Order Details</TitleContainer>\r\n          <OrderHeader>\r\n            <HeaderBlockContainer>\r\n              Information\r\n            </HeaderBlockContainer>\r\n            <HeaderBlockContainer>\r\n              Shipping To\r\n            </HeaderBlockContainer>\r\n            <HeaderBlockContainer>\r\n              Payment Methods\r\n            </HeaderBlockContainer>\r\n          </OrderHeader>\r\n\r\n          <DetailsContainer>\r\n            <DetailsBlockContainer>\r\n              <span>Date Ordered: {order.createdAt.split('T')[0]}</span>\r\n              <span>Order Status: {order.isDelivered ? `Delivered ${order.deliveredAt.split('T')[0]}` : 'Processing'}</span>\r\n              <span>Order Number: {order._id}</span>\r\n            </DetailsBlockContainer>\r\n            <DetailsBlockContainer>\r\n              <span>{order.shippingAddress.fName} {order.shippingAddress.lName}</span>\r\n              <span>{order.shippingAddress.phoneNumber}</span>\r\n              {order.shippingAddress.address2 && <span>{order.shippingAddress.address2}</span>}\r\n              <span>{order.shippingAddress.address1}</span>\r\n              <span>{order.shippingAddress.city} {order.shippingAddress.province} {order.shippingAddress.country} {order.shippingAddress.postalCode}</span>\r\n            </DetailsBlockContainer>\r\n            <DetailsBlockContainer>\r\n              <span>{order.paymentMethod}</span>\r\n              <span>Paid Status: {order.isPaid ? order.paidAt.split('T')[0] : 'Not Paid / Problem with payment'}</span>\r\n              <span>Amount: ${order.totalPrice}</span>\r\n            </DetailsBlockContainer>\r\n          </DetailsContainer>\r\n         <Divider />\r\n          {order.orderItems.map( item => \r\n            <ItemContainer key={item._id}>\r\n              <ImageContainer>\r\n                <img src={item.image} alt=\"item\" />\r\n              </ImageContainer>\r\n              <ItemTitle>{item.name}</ItemTitle>\r\n              <ItemQty>x {item.qty}</ItemQty>\r\n              <ItemPrice>CAD${item.price}</ItemPrice>\r\n              <ItemDetails to={`/product/${item._id}`}><CgMoreVertical/></ItemDetails>\r\n            </ItemContainer>  \r\n          )}\r\n        </OrderDetailsContainer>\r\n\r\n        <PriceDetailsContainer>\r\n            <SubTitleContainer>Payment Total</SubTitleContainer>\r\n            <PriceContainer>\r\n              <span><strong>Subtotal:</strong></span>\r\n              <span>${order.itemsPrice}</span>\r\n            </PriceContainer>\r\n            <PriceContainer>\r\n              <span><strong>Tax(13%):</strong></span>\r\n              <span>${order.taxPrice}</span>\r\n            </PriceContainer>\r\n            <PriceContainer>\r\n              <span><strong>Shipping:</strong></span>\r\n              <span>{order.shippingPrice === 0 ? 'Free Shipping' : `$${order.shippingPrice}`}</span>\r\n            </PriceContainer>\r\n            <Divider />\r\n            <PriceContainer>\r\n              <TotalPrice><strong>TOTAL</strong></TotalPrice>\r\n              <TotalPrice>CAD${order.totalPrice}</TotalPrice>\r\n            </PriceContainer>\r\n        </PriceDetailsContainer>\r\n      </ContentContainer>\r\n    </OrderPageContainer>\r\n  )\r\n}\r\n\r\nexport default OrderPage\r\n"],"sourceRoot":""}