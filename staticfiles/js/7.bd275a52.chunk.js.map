{"version":3,"sources":["components/form-input/form-input.styles.jsx","components/form-input/form-input.component.jsx","redux/order/order.selectors.js","components/shopping-bag-item/shopping-bag-item.styles.jsx","components/shopping-bag-item/shopping-bag-item.component.jsx","../../src/index.tsx","components/checkout-step/checkout-step.styles.jsx","components/checkout-step/checkout-step.component.jsx","components/shipping/shipping.styles.jsx","components/shipping/shipping.component.jsx","components/card-payment/card-payment.styles.jsx","components/card-payment/card-payment.component.jsx","components/payment-method/payment-method.styles.jsx","components/payment-method/payment-method.component.jsx","components/checkout-review/checkout-review.styles.jsx","components/checkout-review/checkout-review.component.jsx","components/summary-cart/summary-cart.styles.jsx","components/summary-cart/summary-cart.component.jsx","pages/checkoutPage/checkoutPage.styles.jsx","pages/checkoutPage/checkoutPage.component.jsx"],"names":["subColor","shrinkLabelStyles","css","GroupContainer","styled","div","FormInputContainer","input","FormInputLabel","label","FormInput","handleChange","otherProps","onChange","className","value","length","selectOrder","state","order","selectOrderDetails","createSelector","selectOrderList","orderList","selectOrderMessage","message","selectOrderError","loading","error","ShoppingBagItemContainer","ImageContainer","TextContainer","PriceContainer","span","QuantityContainer","RemoveButtonContainer","withRouter","cartItem","history","name","image","price","quantity","_id","dispatch","useDispatch","src","alt","onClick","push","removeItem","addItem","cartItemToAdd","clearItemFromCart","PayPalButton","isSdkReady","window","this","props","data","actions","currency","options","amount","shippingPreference","purchase_units","currency_code","application_context","shipping_preference","onSuccess","createOrder","createSubscription","onApprove","style","Button","React","ReactDOM","createOrderFn","undefined","onButtonReady","queryParams","Object","k","script","document","Error","Component","PropTypes","catchError","onError","clientId","merchantId","intent","commit","vault","component","disableFunding","disableCard","integrationDate","locale","buyerCountry","debug","func","StepContainer","LinkContainer","Link","CheckoutStep","step","to","ShippingContainer","FormContainer","NextButton","CustomButton","TitleContainer","RowContainer","SelectContainer","next","shipping","useSelector","selectShippingAddress","useState","fName","lName","phoneNumber","address1","address2","city","country","province","postalCode","userCredentials","setCredentials","event","target","onSubmit","e","preventDefault","saveShippingAddress","type","required","map","prov","index","CardPaymentContainer","InputContainer","CardPayment","show","number","expired","cvv","pattern","min","max","PaymentMenthodContainer","OptionContainer","Fill","RadioButton","RadioButtonLabel","selectPaymentMethod","paymentMethod","setPaymentMethod","card","setCard","checked","savePaymentMethod","CheckoutReviewContainer","DetailsContainer","hr","sdkReady","setSdkReady","cartItems","selectCartItems","currentUser","selectCurrentUser","address","payment","total","selectCartTotal","selectCartAllPrice","subtotal","taxPrice","shippingPrice","useEffect","alert","clearCart","paypal","email","toUpperCase","marginBottom","status","console","log","createOrderStart","orderItems","shippingAddress","itemsPrice","totalPrice","isPaid","SummaryCartContainer","Divider","TotalPrice","SummaryCart","CheckoutPageContainer","ContentContainer","CheckoutPage","location","setStep","URLSearchParams","search","get"],"mappings":"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","file":"static/js/7.bd275a52.chunk.js","sourcesContent":["import styled, { css } from 'styled-components';\r\n\r\nconst subColor = 'grey';\r\nconst mainColor = 'black';\r\n\r\nconst shrinkLabelStyles = css`\r\n  top: -14px;\r\n  font-size: 12px;\r\n  color: ${mainColor};\r\n`;\r\n\r\nexport const GroupContainer = styled.div`\r\n  position: relative;\r\n  margin: 20px 0;\r\n  input[type='password'] {\r\n    letter-spacing: 0.3em;\r\n  }\r\n`;\r\n\r\nexport const FormInputContainer = styled.input`\r\n  background: none;\r\n  background-color: white;\r\n  color: ${subColor};\r\n  font-size: 15px;\r\n  padding: 10px 10px 10px 5px;\r\n  display: block;\r\n  width: 100%;\r\n  border: none;\r\n  border-radius: 0;\r\n  border-bottom: 1px solid ${subColor};\r\n  margin: 25px 0;\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  &:focus ~ label {\r\n    ${shrinkLabelStyles}\r\n  }\r\n`;\r\n\r\nexport const FormInputLabel = styled.label`\r\n  color: ${subColor};\r\n  font-size: 16px;\r\n  font-weight: normal;\r\n  position: absolute;\r\n  pointer-events: none;\r\n  left: 5px;\r\n  top: 10px;\r\n  transition: 300ms ease all;\r\n  &.shrink {\r\n    ${shrinkLabelStyles}\r\n  }\r\n`;","import React from 'react';\r\nimport {\r\n  GroupContainer,\r\n  FormInputContainer,\r\n  FormInputLabel\r\n} from './form-input.styles';\r\n\r\nconst FormInput = ({ handleChange, label, ...otherProps }) => (\r\n  <GroupContainer>\r\n    <FormInputContainer onChange={handleChange} {...otherProps}/>\r\n    { label ? \r\n      (<FormInputLabel className={otherProps.value.length ? 'shrink' : ''}>\r\n        {label}\r\n      </FormInputLabel>)\r\n      : null}\r\n  </GroupContainer>\r\n\r\n\r\n);\r\n\r\nexport default FormInput;","import { createSelector } from \"reselect\";\r\n\r\nconst selectOrder = state => state.order;\r\n\r\nexport const selectOrderDetails = createSelector(\r\n  [selectOrder],\r\n  order => order.order\r\n);\r\n\r\nexport const selectOrderList = createSelector(\r\n  [selectOrder],\r\n  order => order.orderList\r\n);\r\n\r\nexport const selectOrderMessage = createSelector(\r\n  [selectOrder],\r\n  order => order.message\r\n);\r\n\r\nexport const selectIsOrderLoading = createSelector(\r\n  [selectOrder],\r\n  order => order.loading\r\n); \r\nexport const selectOrderError = createSelector(\r\n  [selectOrder],\r\n  order => order.error\r\n); ","import styled from \"styled-components\";\r\n\r\nexport const ShoppingBagItemContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  min-height: 100px;\r\n  border-bottom: 1px solid darkgrey;\r\n  padding: 15px 0;\r\n  font-size: 17px;\r\n  align-items: center;\r\n`;\r\n\r\nexport const ImageContainer = styled.div`\r\n  width: 20%;\r\n  padding-right: 15px;\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nexport const TextContainer = styled.div`\r\n  width: 30%;\r\n  font-size: 15px;\r\n  text-decoration: none;\r\n  color: black;\r\n  cursor: pointer;\r\n  @media screen and (max-width: 800px) {\r\n    font-size: 15px;\r\n  }\r\n`;\r\nexport const PriceContainer = styled.span`\r\n  width: 15%;\r\n  @media screen and (max-width: 800px) {\r\n    font-size: 15px;\r\n  }\r\n`;\r\n\r\nexport const QuantityContainer = styled(TextContainer)`\r\n  width: 20%;\r\n  display: flex;\r\n  span {\r\n    margin: 0 15px;\r\n  }\r\n  div {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const RemoveButtonContainer = styled.div`\r\n  padding-left: 12px;\r\n  cursor: pointer;\r\n  width: 5%;\r\n`;","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\nimport { clearItemFromCart, addItem, removeItem } from '../../redux/cart/cart.actions';\r\nimport {\r\n  ShoppingBagItemContainer,\r\n  ImageContainer,\r\n  TextContainer,\r\n  QuantityContainer,\r\n  RemoveButtonContainer,\r\n  PriceContainer\r\n} from './shopping-bag-item.styles';\r\n\r\nconst ShoppingBagItem = ({ cartItem, history }) => {\r\n  const { name, image, price, quantity, _id } = cartItem\r\n  const dispatch = useDispatch()\r\n  return (\r\n    <ShoppingBagItemContainer>\r\n    <ImageContainer>\r\n      <img src={image} alt=\"item\" />\r\n    </ImageContainer>\r\n    <TextContainer onClick={() => history.push(`/product/${_id}`)}>{name}</TextContainer>\r\n    <QuantityContainer>\r\n      <div onClick={() => dispatch(removeItem(cartItem))}>&#10094;</div>\r\n      <span>{quantity}</span>\r\n      <div onClick={() => dispatch(addItem({cartItemToAdd: cartItem, quantity: 1}))}>&#10095;</div>\r\n    </QuantityContainer>\r\n    <PriceContainer>${price}</PriceContainer>\r\n    <RemoveButtonContainer onClick={() => dispatch(clearItemFromCart(cartItem))}>&#10005;</RemoveButtonContainer>\r\n  </ShoppingBagItemContainer>\r\n  )\r\n}\r\n\r\nexport default withRouter(ShoppingBagItem)","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\n\ndeclare global {\n    interface Window { paypal: any }\n}\n\nexport interface PayPalButtonProps {\n    amount?: number|string,\n    currency?: number|string,\n    shippingPreference?: \"NO_SHIPPING\" | \"GET_FROM_FILE\" | \"SET_PROVIDED_ADDRESS\",\n    onSuccess?: Function,\n    catchError?: Function,\n    onError?: Function,\n    createOrder?: Function,\n    createSubscription?: Function,\n    onApprove?: Function,\n    style?: object,\n    options?: PaypalOptions,\n    onButtonReady?: Function,\n}\n\nexport interface PayPalButtonState {\n    isSdkReady: boolean\n}\n\nexport interface PaypalOptions {\n    clientId?: string,\n    merchantId?: string,\n    currency?: number|string,\n    intent?: string,\n    commit?: boolean|string,\n    vault?: boolean|string,\n    component?: string,\n    disableFunding?: string,\n    disableCard?: string,\n    integrationDate?: string,\n    locale?: string,\n    buyerCountry?: string,\n    debug?: boolean|string\n}\n\nclass PayPalButton extends React.Component<PayPalButtonProps, PayPalButtonState> {\n    static propTypes = {\n        amount: PropTypes.oneOfType([\n            PropTypes.number,\n            PropTypes.string,\n        ]),\n        currency: PropTypes.oneOfType([\n            PropTypes.number,\n            PropTypes.string,\n        ]),\n        shippingPreference: PropTypes.string,\n        onSuccess: PropTypes.func,\n        catchError: PropTypes.func,\n        onError: PropTypes.func,\n        createOrder: PropTypes.func,\n        createSubscription: PropTypes.func,\n        onApprove: PropTypes.func,\n        style: PropTypes.object,\n        options: PropTypes.shape({\n            clientId: PropTypes.string,\n            merchantId: PropTypes.string,\n            currency: PropTypes.oneOfType([\n                PropTypes.number,\n                PropTypes.string,\n            ]),\n            intent: PropTypes.string,\n            commit: PropTypes.oneOfType([\n                PropTypes.bool,\n                PropTypes.string\n            ]),\n            vault: PropTypes.oneOfType([\n                PropTypes.bool,\n                PropTypes.string\n            ]),\n            component: PropTypes.string,\n            disableFunding: PropTypes.string,\n            disableCard: PropTypes.string,\n            integrationDate: PropTypes.string,\n            locale: PropTypes.string,\n            buyerCountry: PropTypes.string,\n            debug: PropTypes.oneOfType([\n                PropTypes.bool,\n                PropTypes.string\n            ])\n        }),\n        onButtonReady: PropTypes.func,\n    }\n\n    static defaultProps = {\n        style: {},\n        options: {\n            clientId: \"sb\",\n            currency: \"USD\"\n        },\n        shippingPreference: \"GET_FROM_FILE\",\n    }\n\n    constructor(props: PayPalButtonProps) {\n        super(props);\n\n        this.state = {\n            isSdkReady: false,\n        };\n    }\n\n    componentDidMount() {\n        if (\n            typeof window !== \"undefined\" &&\n            window !== undefined &&\n            window.paypal === undefined\n        ) {\n            this.addPaypalSdk();\n        }\n        else if (\n            typeof window !== \"undefined\" &&\n            window !== undefined &&\n            window.paypal !== undefined &&\n            this.props.onButtonReady\n        ) {\n            this.props.onButtonReady();\n        }\n    }\n\n    createOrder(data: any, actions: any) {\n\n        const { currency, options, amount, shippingPreference } = this.props;\n\n        return actions.order.create({\n          purchase_units: [\n            {\n              amount: {\n                currency_code: currency\n                  ? currency\n                  : options && options.currency\n                  ? options.currency\n                  : \"USD\",\n                value: amount.toString()\n              }\n            }\n          ],\n          application_context: {\n            shipping_preference: shippingPreference\n          }\n        });\n    }\n\n    onApprove(data: any, actions: any) {\n        return actions.order\n            .capture()\n            .then((details) => {\n                if (this.props.onSuccess) {\n                    return this.props.onSuccess(details, data);\n                }\n            })\n            .catch((err) => {\n                if (this.props.catchError) {\n                    return this.props.catchError(err);\n                }\n            });\n    }\n\n    render() {\n        const {\n            amount,\n            onSuccess,\n            createOrder,\n            createSubscription,\n            onApprove,\n            style,\n        } = this.props;\n        const { isSdkReady } = this.state;\n\n        if (\n            !isSdkReady &&\n            (typeof window === \"undefined\" || window.paypal === undefined)\n        ) {\n            return null;\n        }\n\n        const Button = window.paypal.Buttons.driver(\"react\", {\n            React,\n            ReactDOM,\n        });\n\n        const createOrderFn =\n            amount && !createOrder\n                ? (data: any, actions: any) => this.createOrder(data, actions)\n                : (data: any, actions: any) => createOrder(data, actions);\n\n        return (\n            <Button\n                {...this.props}\n                createOrder={createSubscription ? undefined : createOrderFn}\n                createSubscription={createSubscription}\n                onApprove={\n                    onSuccess\n                        ? (data: any, actions: any) => this.onApprove(data, actions)\n                        : (data: any, actions: any) => onApprove(data, actions)\n                }\n                style={style}\n            />\n        );\n    }\n\n    private addPaypalSdk() {\n        const { options, onButtonReady } = this.props;\n        const queryParams: string[] = [];\n\n        // replacing camelCase with dashes\n        Object.keys(options).forEach(k => {\n            const name = k.split(/(?=[A-Z])/).join(\"-\").toLowerCase();\n            queryParams.push(`${name}=${options[k]}`);\n        });\n\n        const script = document.createElement(\"script\");\n        script.type = \"text/javascript\";\n        script.src = `https://www.paypal.com/sdk/js?${queryParams.join(\"&\")}`;\n        script.async = true;\n        script.onload = () => {\n            this.setState({ isSdkReady: true });\n\n            if (onButtonReady) {\n                onButtonReady();\n            }\n        };\n        script.onerror = () => {\n            throw new Error(\"Paypal SDK could not be loaded.\");\n        };\n    \n        document.body.appendChild(script);\n    }\n}\n\nexport { PayPalButton };\n","import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const StepContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const LinkContainer = styled(Link)`\r\n  padding: 10px 50px;\r\n  margin: 20px 0 50px 0;\r\n  border-bottom: solid 2px lightgray;\r\n  text-decoration: none;\r\n  color: black;\r\n  &.active {\r\n    border-bottom: solid 2px #a65740;\r\n  }\r\n  @media screen and (max-width: 800px) {\r\n    padding: 10px 20px;\r\n  }\r\n`;","import React from 'react'\r\nimport { StepContainer, LinkContainer } from './checkout-step.styles'\r\n\r\nconst CheckoutStep = ({step}) => {\r\n  \r\n  return (\r\n    <StepContainer>\r\n      <LinkContainer to=\"/cart\">Bag</LinkContainer>\r\n      <LinkContainer to=\"/checkout?step=shipping\" className={(step === undefined || step==='shipping') ? \"active\" : \"\"}>Shipping</LinkContainer>\r\n      <LinkContainer to=\"/checkout?step=payment\" className={(step==='payment') ? \"active\" : \"\"}>Payment</LinkContainer>\r\n      <LinkContainer to=\"/checkout?step=review\" className={(step==='review') ? \"active\" : \"\"}>Review</LinkContainer>\r\n    </StepContainer>\r\n  )\r\n}\r\n\r\nexport default CheckoutStep\r\n","import styled from \"styled-components\";\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nexport const ShippingContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 30%;\r\n  /* align-items: center; */\r\n  @media screen and (max-width: 800px) {\r\n    width: 80%\r\n  }\r\n`;\r\n\r\nexport const FormContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  height: 115px;\r\n  \r\n`;\r\n\r\nexport const NextButton = styled(CustomButton)`\r\n  width: 100%;\r\n  margin-top: 30px;\r\n`;\r\n\r\nexport const TitleContainer = styled.div`\r\n  font-weight: medium;\r\n  font-size: xx-large;\r\n  @media screen and (max-width: 800px) {\r\n    font-size: x-large;\r\n  }\r\n  \r\n`;\r\nexport const RowContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const SelectContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 25%;\r\n  gap: 3px;\r\n  select {\r\n    padding: 5px;\r\n  }\r\n  span {\r\n    font-size: 15px;\r\n    color: black;\r\n  }\r\n`;","import React, {useState} from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\nimport FormInput from '../form-input/form-input.component'\r\nimport { saveShippingAddress } from '../../redux/cart/cart.actions';\r\nimport { selectShippingAddress } from '../../redux/cart/cart.selectors';\r\nimport { ShippingContainer, FormContainer, NextButton, TitleContainer, RowContainer, SelectContainer } from './shipping.styles';\r\n\r\n\r\nconst Shipping = ({history, next}) => {\r\n  const dispatch = useDispatch();\r\n  const shipping = useSelector(selectShippingAddress)\r\n  const [userCredentials, setCredentials] = useState ({\r\n    fName: shipping.fName,\r\n    lName: shipping.lName,\r\n    phoneNumber: shipping.phoneNumber,\r\n    address1: shipping.address1,\r\n    address2: shipping.address2,\r\n    city: shipping.city,\r\n    country: shipping.country,\r\n    province: shipping.province,\r\n    postalCode: shipping.postalCode\r\n  });\r\n  const { fName, lName, phoneNumber, address1, address2, city, country, province, postalCode } = userCredentials;\r\n  const provinceArray = ['AB', 'BC', 'MB', 'NB', 'NL', 'NS', 'NT', 'NU', 'ON', 'PE', 'QC', 'SK', 'YT']\r\n\r\n  const handleChange = event => {\r\n    const {name, value} = event.target;\r\n    setCredentials({...userCredentials, [name]: value});\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(saveShippingAddress({fName, lName, phoneNumber, address1, address2, city, country, province, postalCode}))\r\n    history.push('/checkout?step=payment')\r\n    \r\n  }\r\n  return (\r\n    <ShippingContainer>\r\n      <TitleContainer>Shipping Information</TitleContainer>\r\n        <form onSubmit={handleSubmit} className=\"sign-up-form\">\r\n          <FormContainer>\r\n            <FormInput \r\n              type='text'\r\n              name='fName'\r\n              value={fName}\r\n              onChange={handleChange}\r\n              label='First Name'\r\n              required />\r\n            <FormInput \r\n              type='text'\r\n              name='lName'\r\n              value={lName}\r\n              onChange={handleChange}\r\n              label='Last Name'\r\n              required />\r\n          </FormContainer>\r\n          <FormInput \r\n            type='tel'\r\n            name='phoneNumber'\r\n            value={phoneNumber}\r\n            onChange={handleChange}\r\n            label='Phone Number'\r\n            required />\r\n          <FormInput \r\n            type='text'\r\n            name='address1'\r\n            value={address1}\r\n            onChange={handleChange}\r\n            label='Address Line 1'\r\n            required />\r\n          <FormInput \r\n            type='text'\r\n            name='address2'\r\n            value={address2}\r\n            onChange={handleChange}\r\n            label='Address Line 2'\r\n          />\r\n          <FormInput \r\n            type='text'\r\n            name='city'\r\n            value={city}\r\n            onChange={handleChange}\r\n            label='City'\r\n            required />\r\n\r\n\r\n          <RowContainer>\r\n            <SelectContainer>\r\n              <span>Province</span>\r\n              <select name='province' onChange={handleChange} value={province}>\r\n                { provinceArray.map((prov, index) =>\r\n                  <option key={index} value={prov}>{prov}</option>\r\n                )}\r\n              </select>\r\n            </SelectContainer>\r\n            <SelectContainer>\r\n              <span>Country</span>\r\n              <select name='country' onChange={handleChange} value={country}>\r\n                <option value='Canada'>Canada</option> \r\n              </select>\r\n            </SelectContainer>\r\n          </RowContainer>\r\n          \r\n              \r\n          <FormInput \r\n          type='text'\r\n          name='postalCode'\r\n          value={postalCode}\r\n          onChange={handleChange}\r\n          label='Postal Code'\r\n          required />\r\n              \r\n            \r\n          <NextButton type='submit'>CONTINUING TO PAYMENT</NextButton>\r\n        </form>\r\n      \r\n    </ShippingContainer>\r\n  )\r\n}\r\n\r\nexport default withRouter(Shipping)\r\n","import styled from \"styled-components\";\r\n\r\nexport const CardPaymentContainer = styled.div`\r\n  margin: 30px;\r\n  width: auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 0;\r\n  overflow-y: hidden;\r\n  transition: height .3s ease-in-out;\r\n  form {\r\n    margin-top: -20px;\r\n  }\r\n  &.active {\r\n    height: 330px; \r\n  }\r\n  @media screen and (max-width: 800px) {\r\n    &.active {\r\n    height: 300px; \r\n  }\r\n  }\r\n`;\r\n\r\nexport const RowContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n`;\r\n\r\nexport const InputContainer =styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 30%;\r\n  span{\r\n    font-size: 15px;\r\n    color: grey;\r\n  }\r\n  input {\r\n    border: none;\r\n    border-bottom: 1px solid black;\r\n    /* margin: 10px 0; */\r\n    padding: 10px 0;\r\n    \r\n\r\n    &:focus {\r\n      outline: none;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const TitleContainer = styled.div`\r\n  font-weight: 500;\r\n  font-size: 20px;\r\n  margin-bottom: 10px;\r\n`;","import React, {useState} from 'react'\r\n// import { useDispatch } from 'react-redux'\r\nimport FormInput from '../form-input/form-input.component'\r\n// import { savePaymentMethod } from '../../redux/cart/cart.actions'\r\nimport { CardPaymentContainer, RowContainer, TitleContainer, InputContainer } from './card-payment.styles'\r\n\r\nconst CardPayment = ({show}) => {\r\n  // const dispatch = useDispatch();\r\n  const [userCredentials, setCredentials] = useState ({\r\n    name: '',\r\n    number: '',\r\n    expired: '',\r\n    cvv:''\r\n  });\r\n  const { name, number, expired, cvv } = userCredentials;\r\n\r\n  const handleChange = event => {\r\n    const {name, value} = event.target;\r\n    setCredentials({...userCredentials, [name]: value});\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n  }\r\n  return (\r\n    <CardPaymentContainer className={show ? \"active\" : \"\"}>\r\n      <TitleContainer>Card Information</TitleContainer>\r\n        <form onSubmit={handleSubmit}>\r\n          <FormInput \r\n            type='text'\r\n            name='name'\r\n            value={name}\r\n            onChange={handleChange}\r\n            label='Name on Card'\r\n            required />\r\n          <FormInput \r\n            type='text'\r\n            name='number'\r\n            value={number}\r\n            onChange={handleChange}\r\n            label='Card Number'\r\n            required />\r\n            \r\n          <RowContainer>\r\n            <InputContainer>\r\n            <span>Epired MM/YY</span>\r\n            <input \r\n              type=\"text\" \r\n              name=\"expired\" \r\n              value={expired} \r\n              onChange={handleChange}\r\n              pattern=\"([0-9]{2}[/]?){2}\"\r\n              required />\r\n            </InputContainer>\r\n            <InputContainer>\r\n              <span>CVV</span>\r\n              <input \r\n                type=\"number\" \r\n                name=\"cvv\" \r\n                value={cvv} \r\n                onChange={handleChange}\r\n                min=\"1\"\r\n                max=\"999\"\r\n                required />\r\n            </InputContainer>\r\n          </RowContainer>\r\n           \r\n        </form>\r\n    </CardPaymentContainer>\r\n  )\r\n}\r\n\r\nexport default CardPayment\r\n","import styled from \"styled-components\";\r\nimport CustomButton from \"../custom-button/custom-button.component\";\r\n\r\nexport const PaymentMenthodContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 30%;\r\n  @media screen and (max-width: 800px) {\r\n    width: 80%;\r\n  }\r\n`;\r\n\r\nexport const TitleContainer = styled.div`\r\n  font-weight: medium;\r\n  font-size: xx-large;\r\n  @media screen and (max-width: 800px) {\r\n    font-size: x-large;\r\n  }\r\n`;\r\n\r\nexport const OptionContainer = styled.div`\r\n  display:flex; \r\n  align-items: center;\r\n  margin-top: 20px;\r\n  width: 20px;\r\n  height: 20px;\r\n  position: relative;\r\n  \r\n  &::before {\r\n    content: '';\r\n    border-radius: 100%;\r\n    border: 1px solid lightgrey;\r\n    background: #FAFAFA;\r\n    width: 100%;\r\n    height: 100%;\r\n    position: absolute;\r\n    top: 0;\r\n    box-sizing: border-box;\r\n    pointer-events: none;\r\n  }\r\n`;\r\n\r\nexport const Fill = styled.div`\r\n  background: black;\r\n  width: 0;\r\n  height: 0;\r\n  border-radius: 100%;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  transition: width 0.2s ease-in, height 0.2s ease-in;\r\n  pointer-events: none;\r\n  z-index: 1;\r\n`;\r\n\r\nexport const RadioButton = styled.input`\r\n  opacity: 0;\r\n  z-index: 2;\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin: 0;\r\n  cursor: pointer;\r\n  \r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  \r\n  &:checked ~ ${Fill} {\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    transition: width 0.2s ease-out, height 0.2s ease-out;\r\n  }\r\n`;\r\n\r\nexport const RadioButtonLabel = styled.div` \r\n  font-size: medium;\r\n  margin-left: 30px;\r\n`;\r\n\r\nexport const NextButton = styled(CustomButton)`\r\n  width: 100%;\r\n  margin-top: 30px;\r\n`;","import React, {useState} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { withRouter } from 'react-router';\r\nimport CardPayment from '../card-payment/card-payment.component'\r\nimport { savePaymentMethod } from '../../redux/cart/cart.actions'\r\nimport { selectPaymentMethod } from '../../redux/cart/cart.selectors'\r\nimport { PaymentMenthodContainer, TitleContainer, OptionContainer, RadioButton, RadioButtonLabel, Fill, NextButton } from './payment-method.styles'\r\n\r\nconst PaymentMethod = ({history}) => {\r\n  const dispatch = useDispatch()\r\n  const [ paymentMethod, setPaymentMethod ] = useState(useSelector(selectPaymentMethod))\r\n  const [ card, setCard ] = useState(false)\r\n\r\n  const submitHandler = () => {\r\n    dispatch(savePaymentMethod(paymentMethod))\r\n    history.push('/checkout?step=review')\r\n  }\r\n\r\n  return (\r\n    <PaymentMenthodContainer>\r\n      <TitleContainer>Payment Method</TitleContainer>\r\n      <OptionContainer>\r\n        <RadioButton \r\n          type='radio' \r\n          name='payment' \r\n          value='paypal' \r\n          checked={paymentMethod==='paypal'} \r\n          onClick={() => setCard(false)} \r\n          onChange={e => setPaymentMethod(e.target.value)}\r\n        />\r\n        <Fill />\r\n        <RadioButtonLabel>PayPal</RadioButtonLabel>\r\n      </OptionContainer>\r\n      <OptionContainer>\r\n        <RadioButton \r\n          type='radio' \r\n          name='payment' \r\n          value='card' \r\n          checked={paymentMethod==='card'}\r\n          onClick={() => setCard(true)}  \r\n          onChange={e => setPaymentMethod(e.target.value)}/>\r\n        <Fill />\r\n        <RadioButtonLabel>Credit/MasterCard</RadioButtonLabel>\r\n      </OptionContainer>\r\n    <CardPayment show={card}/>\r\n    <NextButton onClick={submitHandler}>CONTINUING TO REVIEW</NextButton>\r\n    </PaymentMenthodContainer>\r\n  )\r\n}\r\n\r\nexport default withRouter(PaymentMethod)\r\n","import styled from \"styled-components\";\r\n\r\nexport const CheckoutReviewContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 30%;\r\n  @media screen and (max-width: 800px) {\r\n    width: 80%;\r\n  }\r\n`;\r\n\r\nexport const TitleContainer = styled.div`\r\n  font-weight: medium;\r\n  font-size: x-large;\r\n  \r\n`;\r\n\r\nexport const Divider = styled.hr`\r\n  border-top: 2px solid gray;\r\n  margin: 20px 0;\r\n`;\r\n\r\nexport const DetailsContainer = styled.div`\r\n  padding: 20px;\r\n  border-left: 1px solid lightgray;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 7px;\r\n  letter-spacing: .1em;\r\n  margin-bottom: 20px;\r\n  \r\n  strong {\r\n    font-weight: 500;\r\n  }\r\n`;","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { withRouter } from 'react-router';\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\nimport Spinner from '../spinner/spinner.component'\r\nimport { selectShippingAddress, selectPaymentMethod, selectCartTotal ,selectCartAllPrice, selectCartItems } from '../../redux/cart/cart.selectors'\r\nimport { selectCurrentUser } from '../../redux/user/user.selectors'\r\nimport { selectOrderMessage } from '../../redux/order/order.selectors'\r\nimport { clearCart } from '../../redux/cart/cart.actions';\r\nimport { createOrderStart } from '../../redux/order/order.actions';\r\nimport { CheckoutReviewContainer, DetailsContainer,TitleContainer } from './checkout-review.styles'\r\n\r\n\r\nconst CheckoutReview = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n  const [sdkReady, setSdkReady] = useState(false)\r\n  const message = useSelector(selectOrderMessage)\r\n  const cartItems = useSelector(selectCartItems)\r\n  const currentUser = useSelector(selectCurrentUser)\r\n  const address = useSelector(selectShippingAddress)\r\n  const payment = useSelector(selectPaymentMethod)\r\n  const total = useSelector(selectCartTotal)\r\n  const { subtotal, taxPrice, shippingPrice } = useSelector(selectCartAllPrice)\r\n\r\n  useEffect(() => {\r\n    if (message){\r\n      alert({message})\r\n      dispatch(clearCart())\r\n      // dispatch(resetOrder())\r\n      // dispatch(resetCart())\r\n      history.push(`/`)\r\n    }\r\n    if (window.paypal) {\r\n      setSdkReady(true)\r\n    }\r\n  }, [ dispatch, message, history])\r\n\r\n  const successPaymentHandler = ({ status }) => {\r\n    // dispatch(payOrder(orderId, paymentResult))\r\n    console.log('payment', status)\r\n    if (status === 'COMPLETED'){\r\n      dispatch(createOrderStart({\r\n        orderItems: cartItems,\r\n        shippingAddress: address,\r\n        paymentMethod: payment,\r\n        itemsPrice: subtotal,\r\n        shippingPrice: shippingPrice,\r\n        taxPrice: taxPrice,\r\n        totalPrice: total,\r\n        isPaid: true\r\n      }))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <CheckoutReviewContainer>\r\n      <TitleContainer>Contact Information</TitleContainer>\r\n      <DetailsContainer>\r\n        <span><strong>{currentUser.email}</strong></span>\r\n      </DetailsContainer>\r\n\r\n      <TitleContainer>Shipping Information</TitleContainer>\r\n      <DetailsContainer>\r\n        <span><strong>{address.fName} {address.lName}</strong></span>\r\n        <span>+1{address.phoneNumber}</span>\r\n        <span>{address.address1}</span>\r\n        {address.address2 && <span>{address.address2}</span>}\r\n        <span>{address.city} {address.province} {address.country} {address.postalCode}</span>\r\n      </DetailsContainer>\r\n\r\n      <TitleContainer>Payment Method</TitleContainer>\r\n      <DetailsContainer>\r\n        <span><strong>{payment.toUpperCase()}</strong></span>\r\n      </DetailsContainer>\r\n      <TitleContainer style={{ marginBottom:'20px'}}>Pay and Place My Order</TitleContainer>\r\n      {!sdkReady ? (\r\n          <Spinner />\r\n      ) : (\r\n          <PayPalButton\r\n              amount={total}\r\n              currency='CAD'\r\n              shippingPreference='NO_SHIPPING'\r\n              onSuccess={successPaymentHandler}\r\n          />\r\n      )}\r\n    </CheckoutReviewContainer>\r\n  )\r\n}\r\n\r\nexport default withRouter(CheckoutReview)\r\n","import styled from \"styled-components\";\r\n\r\nexport const SummaryCartContainer = styled.div`\r\n  width: 25%;\r\n  background-color: #f6f4f1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 20px;\r\n  height: fit-content;\r\n  @media screen and (max-width: 800px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const Divider = styled.hr`\r\n  border-top: 2px solid lightgray;\r\n  margin: 20px 0 10px;\r\n`;\r\n\r\nexport const PriceContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  margin-top: 10px;\r\n`;\r\n\r\nexport const TotalPrice = styled.span`\r\n  font-size: x-large;\r\n  @media screen and (max-width: 800px) {\r\n    font-size: large;\r\n  }\r\n`;","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport ShoppingBagItem from '../shopping-bag-item/shopping-bag-item.component'\r\nimport { selectCartItems, selectCartTotal, selectCartAllPrice } from '../../redux/cart/cart.selectors'\r\nimport { SummaryCartContainer, PriceContainer, Divider, TotalPrice } from './summary-cart.styles'\r\n\r\nconst SummaryCart = () => {\r\n  const cartItems = useSelector(selectCartItems)\r\n  const total = useSelector(selectCartTotal)\r\n  const { subtotal, taxPrice, shippingPrice } = useSelector(selectCartAllPrice)\r\n  \r\n  return (\r\n    <SummaryCartContainer>\r\n      { cartItems.map(cartItem => \r\n        <ShoppingBagItem key={cartItem._id} cartItem={cartItem} />\r\n      )}\r\n      <PriceContainer>\r\n        <span><strong>Subtotal:</strong></span>\r\n        <span>${subtotal}</span>\r\n      </PriceContainer>\r\n      <PriceContainer>\r\n        <span><strong>Tax(13%):</strong></span>\r\n        <span>${taxPrice}</span>\r\n      </PriceContainer>\r\n      <PriceContainer>\r\n        <span><strong>Shipping:</strong></span>\r\n        <span>{shippingPrice === 0 ? 'Free Shipping' : `$${shippingPrice}`}</span>\r\n      </PriceContainer>\r\n      <Divider />\r\n      <PriceContainer>\r\n        <TotalPrice><strong>TOTAL</strong></TotalPrice>\r\n        <TotalPrice>${total}</TotalPrice>\r\n      </PriceContainer>\r\n    </SummaryCartContainer>\r\n  )\r\n}\r\n\r\nexport default SummaryCart\r\n","import styled from 'styled-components';\r\n\r\nexport const CheckoutPageContainer = styled.div`\r\n  padding: 120px 0 50px 0;\r\n  width: 100%;\r\n`;\r\n\r\nexport const ContentContainer = styled.div`\r\n  width: 100%;\r\n  min-height: 90vh;\r\n  margin-left: 400px;\r\n  display: flex;\r\n  gap: 70px;\r\n  @media screen and (max-width: 800px) {\r\n    flex-direction: column;\r\n    margin-left: 0;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\n","import React,{ useState, useEffect } from 'react'\r\nimport CheckoutStep from '../../components/checkout-step/checkout-step.component';\r\nimport Shipping from '../../components/shipping/shipping.component';\r\nimport PaymentMethod from '../../components/payment-method/payment-method.component'\r\nimport CheckoutReview from '../../components/checkout-review/checkout-review.component'\r\nimport SummaryCart from '../../components/summary-cart/summary-cart.component';\r\nimport {\r\n  CheckoutPageContainer,\r\n  ContentContainer\r\n} from './checkoutPage.styles';\r\n\r\nconst CheckoutPage = ({location}) => {\r\n  const [step, setStep] = useState('')\r\n  useEffect(() => {\r\n    setStep(new URLSearchParams(location.search).get('step'))\r\n  }, [location])\r\n  return (\r\n    <CheckoutPageContainer>\r\n      <CheckoutStep step={step}/>\r\n      <ContentContainer>\r\n        {(step === 'shipping' || step===null)  && <Shipping/>}\r\n        {step === 'payment'  && <PaymentMethod />}\r\n        {step === 'review' && <CheckoutReview />}\r\n        <SummaryCart />\r\n      </ContentContainer>\r\n  </CheckoutPageContainer>\r\n  )\r\n}\r\n\r\nexport default CheckoutPage\r\n"],"sourceRoot":""}